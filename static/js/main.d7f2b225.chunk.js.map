{"version":3,"sources":["HelloWorld.tsx","UsersList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HelloWorld","adminVar","userProfile","useState","id","idSet","onClick","userName","admin","UsersList","props","users","map","user","usersObject","key","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAKgB,SAAUA,EAAV,GAAsE,IAEhEC,EAFiBC,EAA8C,EAA9CA,YAA8C,EAC/DC,mBAAiB,GAD8C,mBAC1EC,EAD0E,KACtEC,EADsE,KAOjF,OAAS,qCACL,wBAAQC,QAAS,kBAAMD,EAAMD,EAAG,IAAhC,kBAGA,+BAAKA,EAAL,UAAgBF,EAAYK,YAJvB,cAKOL,EAAYE,GALnB,iBALSH,EAUmCC,EAAYM,MAVd,GAAVP,EAAiB,aAAeA,EAAW,iBAAiBA,MCJzG,IAQeQ,EARE,SAACC,GAAD,OAEV,mCACI,6BACKA,EAAMC,MAAMC,KAAI,SAACC,GAAD,OAAyB,6BAAKA,EAAKN,mBCC/DM,EAAuB,CAACT,GAAG,EAAEG,SAAU,SAASC,OAAM,GAMtDM,EALQ,CACR,UACA,QACA,aAEkBF,KAAI,SAACC,EAAKE,GAAN,MAAa,CAACX,GAAGW,EAAIR,SAASM,EAAKL,OAAM,MAiCpDQ,MAff,WAII,OACI,sBAAKC,UAAU,MAAf,UAEI,cAACjB,EAAD,CAAYE,YAAaW,IACzB,cAAC,EAAD,CAAWF,MAAOG,QC1BfI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d7f2b225.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport userInterface from \"./interfaces/UserInterface\";\n\n\n\nexport default  function  HelloWorld ({userProfile}:{userProfile : userInterface} )  {\n    const [id ,idSet]=useState<number>(1);\n    const isAdmin  = (adminVar : boolean) => adminVar==true ? ' an ADMIN ' + adminVar : ' not an ADMIN '+adminVar;\n\n    // idSet(2);\n\n\n    return  (<>\n        <button onClick={() => idSet(id+1)} >ADD </button>\n\n\n        <h1>{id} Hello {userProfile.userName}</h1>\n        your Id is {userProfile.id} and you are {isAdmin(userProfile.admin)}\n    </>)\n\n}","import React, {ReactElement} from \"react\";\nimport userInterface from \"./interfaces/UserInterface\";\n\nconst UsersList= (props:any)  =>\n\n       <>\n           <ul>\n               {props.users.map((user: userInterface) => <li>{user.userName}</li>)}\n           </ul>\n       </>\n\nexport default UsersList;\n","import React, {ReactElement} from 'react';\nimport './App.css';\nimport HelloWorld from './HelloWorld'\nimport userInterface from \"./interfaces/UserInterface\";\nimport  UsersList from './UsersList'\n\n\n\nlet user : userInterface = {id:1,userName :'jOKerr',admin:true};\nlet  users =[\n    'Benomar',\n    'Kadri',\n    'Bouchikhi',\n];\nlet usersObject=users.map((user,key)=>({id:key,userName:user,admin:false}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction App() {\n    // var title=' Tout le momde';\n\n\n    return (\n        <div className=\"App\">\n\n            <HelloWorld userProfile={user} />\n            <UsersList users={usersObject}/>\n\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}